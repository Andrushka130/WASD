name: Testing/Build/Deployment üéÆ

on: push


env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checkLicense:
    name: Check for the Unity license ‚òëÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license ‚ò†Ô∏è
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  testRunner:
    needs: checkLicense
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        projectPath:
          - WASD
        unityVersion:
          - 2021.3.12f1
        testMode:
          - playmode
          - editmode
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v2
        id: testRunner
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: all
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results

      - uses: actions/upload-artifact@v2
        with:
          name: Test results
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWebGL:        
    needs: testRunner
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Build for WebGL üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - WASD
        unityVersion:
          - 2021.3.12f1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-
      - uses: game-ci/unity-builder@v2
        with:
          projectPath: ${{ matrix.projectPath}}
          targetPlatform: WebGL
          unityVersion: ${{ matrix.unityVersion }}

      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

  buildWindows:
    needs: testRunner
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Build for Windows üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - WASD
        unityVersion:
         - 2021.3.12f1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-
      - uses: game-ci/unity-builder@v2
        with:
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: StandaloneWindows64
          unityVersion: ${{ matrix.unitVersion }}

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64

#  buildAndroid:
#    needs: testRunner
#    name: Build for Android üì±
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-build-Android
#          restore-keys: |
#            Library-build-
#            Library-
#
#      - uses: webbertakken/unity-builder@v2
#        with:
#          targetPlatform: Android
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: build-Android
#          path: build/Android
#
#
  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages üöÄ
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Display structure of root files
        run: ls -R
        working-directory: build/WebGL

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/WebGL
